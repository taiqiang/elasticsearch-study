---
"Index data, search, and create things in the cluster state that we'll validate are there after the ugprade":
  - do:
      indices.create:
        index: test_index
        body:
          settings:
            index:
              number_of_replicas: 0

  - do:
      bulk:
        refresh: true
        body:
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v1_old", "f2": 0}'
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v2_old", "f2": 1}'
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v3_old", "f2": 2}'
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v4_old", "f2": 3}'
          - '{"index": {"_index": "test_index", "_type": "test_type"}}'
          - '{"f1": "v5_old", "f2": 4}'

  - do:
      indices.flush:
        index: test_index

  - do:
      search:
        index: test_index

  - match: { hits.total: 5 }

  - do:
      snapshot.create_repository:
        repository: my_repo
        body:
          type: url
          settings:
            url: "http://snapshot.test"
  - match: { "acknowledged": true }

  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
            ]
          }
  - match: { "acknowledged": true }

  - do:
      put_template:
        id: test_search_template
        body:
          query:
            match:
              f1: "{{f1}}"
  - match: { acknowledged: true }

  - do:
      search_template:
        body:
          id: test_search_template
          params:
            f1: v5_old
  - match: { hits.total: 1 }

---
"Test rolling upgrade for stored scripts between the old namespace and the new namespace":
  - skip:
      features: warnings

  - do:
     indices.create:
        index: stored_index
        body:
          settings:
            index:
              number_of_replicas: 0

  - do:
     bulk:
        refresh: true
        body:
          - '{"index": {"_index": "stored_index", "_type": "test"}}'
          - '{"value": "value1", "num": 1.0}'
          - '{"index": {"_index": "stored_index", "_type": "test"}}'
          - '{"value": "value2", "num": 2.0}'
          - '{"index": {"_index": "stored_index", "_type": "test"}}'
          - '{"value": "value3", "num": 3.0}'

  - do:
     indices.flush:
        index: stored_index

  - do:
      put_script:
        id: "greater"
        lang: "painless"
        body: {
          "script": "doc['num'].value > 1.0"
        }
  - match: { acknowledged: true }

  - do:
      put_script:
        id: "value"
        lang: "painless"
        body: {
          "script": "doc['num'].value"
        }
  - match: { acknowledged: true }

  - do:
      put_script:
        id: "value"
        lang: "expression"
        body: {
          "script": "doc['num'].value"
        }
  - match: { acknowledged: true }

  - do:
      get_script:
        id: "greater"
        lang: "painless"
  - match: { "found": true }
  - match: { "_id": "greater" }
  - match: { "lang": "painless"}
  - match: { "script": "doc['num'].value > 1.0" }

  - do:
      get_script:
        id: "value"
        lang: "painless"
  - match: { "found": true }
  - match: { "_id": "value" }
  - match: { "lang": "painless"}
  - match: { "script": "doc['num'].value" }

  - do:
      get_script:
        id: "value"
        lang: "expression"
  - match: { "found": true }
  - match: { "_id": "value" }
  - match: { "lang": "expression"}
  - match: { "script": "doc['num'].value" }

  - do:
      search:
        index: stored_index
        body: {
          "query": {
            "script": {
              "script": {
                "id": "greater",
                "lang": "painless"
              }
            }
          },
          "script_fields": {
            "script_painless": {
              "script": {
                "id": "value",
                "lang": "painless"
              }
            },
            "script_expressions": {
              "script": {
                "id": "value",
                "lang": "expression"
              }
            }
          },
          "sort": {
            "num": {
              "order": "asc"
            }
          }
        }
  - match: { hits.total: 2 }
  - match: { hits.hits.0.fields.script_painless.0: 2.0 }
  - match: { hits.hits.1.fields.script_painless.0: 3.0 }
  - match: { hits.hits.0.fields.script_expressions.0: 2.0 }
  - match: { hits.hits.1.fields.script_expressions.0: 3.0 }
